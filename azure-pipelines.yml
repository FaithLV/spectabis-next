trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: '$(Configuration)'



steps:
- bash: |
    echo "##vso[task.setvariable variable=CommithHash]$(git log --pretty=format:'%h' -n 1)"
- script: mkdir $ARTIFACTSFOLDER

- task: UseDotNet@2
  displayName: 'Install Dotnet SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.101'

- task: PowerShell@2
  displayName: 'Insert Service API'
  inputs:
    filePath: 'Scripts/InsertSecretsInSource.ps1'
    arguments: 'src/ServiceClient/Helpers/ServiceCredentialsHelper.cs'
  env:
    SERVICE_API_KEY: $(SERVICE_API_KEY)

- script: dotnet publish -c $CONFIGURATION -r linux-x64
  displayName: 'Build for linux-x64'

- script: dotnet publish -c $CONFIGURATION -r osx-x64
  displayName: 'Build for osx-x64'

- script: dotnet publish -c $CONFIGURATION -r win-x64
  displayName: 'Build for win-x64'

- bash: |
    tar -cvzf $ARTIFACTSFOLDER/spectabis-linux-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/Release/$SDKRELEASEFOLDER/linux-x64/publish

- bash: |
    tar -cvzf $ARTIFACTSFOLDER/spectabis-osx-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/Release/$SDKRELEASEFOLDER/osx-x64/publish

- bash: |
    tar -cvzf $ARTIFACTSFOLDER/spectabis-win-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/Release/$SDKRELEASEFOLDER/win-x64/publish
    
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-linux-$(Build.SourceVersion).tar.gz'
    artifact: 'Spectabis-Linux'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-osx-$(Build.SourceVersion).tar.gz'
    artifact: 'Spectabis-OSX'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-win-$(Build.SourceVersion).tar.gz'
    artifact: 'Spectabis-Windows'
    publishLocation: 'pipeline'